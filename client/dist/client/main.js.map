{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit-pet/edit-pet.component.css","webpack:///./src/app/edit-pet/edit-pet.component.html","webpack:///./src/app/edit-pet/edit-pet.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new-pet/new-pet.component.css","webpack:///./src/app/new-pet/new-pet.component.html","webpack:///./src/app/new-pet/new-pet.component.ts","webpack:///./src/app/pet-list/pet-list.component.css","webpack:///./src/app/pet-list/pet-list.component.html","webpack:///./src/app/pet-list/pet-list.component.ts","webpack:///./src/app/petdetails/petdetails.component.css","webpack:///./src/app/petdetails/petdetails.component.html","webpack:///./src/app/petdetails/petdetails.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PetListComponent } from './pet-list/pet-list.component';\nimport { NewPetComponent } from './new-pet/new-pet.component';\nimport { EditPetComponent } from './edit-pet/edit-pet.component';\nimport { PetdetailsComponent } from './petdetails/petdetails.component';\n\n\nconst routes: Routes = [\n  { path: '',component: PetListComponent },\n  { path: 'new',component: NewPetComponent },\n  // use a colon and parameter name to include a parameter in the url\n  { path: 'edit/:id', component: EditPetComponent },\n  { path: 'details/:id', component: PetdetailsComponent}\n  // // the ** will catch anything that did not match any of the above routes\n  // { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-11\\\">\\n    <h1>{{ title }}</h1>\\n  </div>\\n</div>\\n<br> \\n \\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Pet Shelter';\n  authors;\n  constructor(private _httpService: HttpService, \n              private _route: ActivatedRoute,\n              private _router: Router) {\n    this.getAuthors();\n   }\n   getAuthors(){\n    //  console.log('Getting all of the Authors');\n    //  let observable = this._httpService.getPets();\n    //  observable.subscribe(data => {\n    //    this.authors = data['authors'];\n    //  })\n   }\n   ngOnInit(){\n    this._router.navigate(['/']);\n   }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpService } from './http.service';\n\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PetListComponent } from './pet-list/pet-list.component';\nimport { NewPetComponent } from './new-pet/new-pet.component';\nimport { EditPetComponent } from './edit-pet/edit-pet.component';\nimport { PetdetailsComponent } from './petdetails/petdetails.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PetListComponent,\n    NewPetComponent,\n    EditPetComponent,\n    PetdetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".red {\\r\\n    color: red;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <h4>Edit this pet.</h4>\\n  </div>\\n  \\n  <form *ngIf=\\\"pet\\\" (submit)=editPetForm() method=\\\"POST\\\">\\n    <div *ngIf=\\\"pet.name.length < 3\\\" class=\\\"row red\\\">\\n        <p class=\\\"red\\\">A Pets name must be 3 characters longer.</p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <p>Pet Name: <input type=\\\"text\\\" name=\\\"pet.name\\\" [(ngModel)]=\\\"pet.name\\\"></p>\\n    </div>\\n    <div *ngIf=\\\"pet.type.length < 3\\\" class=\\\"row red\\\">\\n        <p class=\\\"red\\\">A Pets Type must be 3 characters or longer.</p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <p>Pet Type: <input type=\\\"text\\\" name=\\\"pet.type\\\" [(ngModel)]=\\\"pet.type\\\"></p>\\n    </div>\\n    <div *ngIf=\\\"pet.description.length < 3\\\" class=\\\"row red\\\">\\n        <p class=\\\"red\\\">A Pets Description must be 3 characters longer.</p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <p>Description: <input type=\\\"text\\\" name=\\\"pet.description\\\" [(ngModel)]=\\\"pet.description\\\"></p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"p\\\">Skills:</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-1\\\"></div>\\n      <p>Skill 1: <input type=\\\"text\\\" name=\\\"pet.skill1\\\" [(ngModel)]=\\\"pet.skill1\\\"></p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-1\\\"></div>\\n      <p>Skill 2: <input type=\\\"text\\\" name=\\\"pet.skill2\\\" [(ngModel)]=\\\"pet.skill2\\\"></p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-1\\\"></div>\\n      <p>Skill 3: <input type=\\\"text\\\" name=\\\"pet.skill3\\\" [(ngModel)]=\\\"pet.skill3\\\"></p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-2\\\"><input type=\\\"submit\\\" value=\\\"Edit Pet\\\"></div>\\n      <div class=\\\"col-2\\\"><button [routerLink]=\\\"['/']\\\">Cancel</button></div>\\n      \\n    </div>  \\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-edit-pet',\n  templateUrl: './edit-pet.component.html',\n  styleUrls: ['./edit-pet.component.css']\n})\nexport class EditPetComponent implements OnInit {\n\n  pet;\n  id;\n  errorL;\n\n  constructor(private _httpService: HttpService,  \n              private _route: ActivatedRoute,\n              private _router: Router) {}\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.id = params['id']\n      this.getPetService(this.id);      \n    });    \n  }\n  getPetService(id){\n    let obversable = this._httpService.getPetBy(this.id);\n    obversable.subscribe(data=>{\n      this.pet = data;\n      console.log(this.pet);\n    })\n  }\n  editPetForm(){\n    let obversable= this._httpService.updatePet(this.pet);\n    obversable.subscribe(data=>{\n      console.log(data);\n      if(data['status'] == 'errors'){\n        this.errorL = data['errors']\n        console.log(this.errorL);\n      }else{\n      this._router.navigate(['/details/'+this.id])\n      }\n    });\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n  //These routes match up with restful routing in the server / config / routing.js file.\n  getPets(){\n    return  this._http.get('/pets');\n  }\n  getPetBy(id){\n   return this._http.get('/pet/'+id)\n  }\n  createPet(newAuthorData){\n  console.log (newAuthorData);\n  return this._http.post('/pets', newAuthorData);\n  }\n  deletePet(id){\n   return this._http.delete('/pets/'+id);\n  }\n  updatePet(data){\n   return this._http.put('/pets/edit/'+data._id, data);\n  }\n}","module.exports = \".red {\\r\\n    color: red;\\r\\n}\\r\\n.box {\\r\\n    border: 1px solid brown;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <h4>Know of a pet need a home?</h4>\\n</div>\\n\\n<form (submit)=newPetForm() method=\\\"POST\\\">\\n    <div *ngIf=\\\"errorL\\\"class=\\\"row\\\">\\n        <p *ngIf=\\\"errorL.errors.name\\\"class=\\\"red\\\">{{errorL.errors.name.message}}</p>\\n    </div>\\n  <div *ngIf=\\\"newPet.name\\\" class=\\\"row\\\">\\n      <p *ngIf=\\\"newPet.name.length < 3\\\" class=\\\"red\\\">A Pets name must be 3 characters longer.</p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <p>Pet Name: <input type=\\\"text\\\" name=\\\"newPet.name\\\" [(ngModel)]=\\\"newPet.name\\\"></p>\\n  </div>\\n  <div *ngIf=\\\"errorL\\\"class=\\\"row\\\">\\n      <p *ngIf=\\\"errorL.errors.type\\\"class=\\\"red\\\">{{errorL.errors.type.message}}</p>\\n  </div>\\n  <div *ngIf=\\\"newPet.type\\\" class=\\\"row\\\">\\n      <p *ngIf=\\\"newPet.type.length < 3\\\" class=\\\"red\\\">A Pets type must be 3 characters longer.</p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <p>Pet Type: <input type=\\\"text\\\" name=\\\"newPet.type\\\" [(ngModel)]=\\\"newPet.type\\\"></p>\\n  </div>\\n  <div *ngIf=\\\"errorL\\\"class=\\\"row\\\">\\n      <p *ngIf=\\\"errorL.errors.description\\\" class=\\\"red\\\">{{errorL.errors.description.message}}</p>\\n  </div>\\n  <div *ngIf=\\\"newPet.description\\\" class=\\\"row\\\">\\n      <p *ngIf=\\\"newPet.description.length < 3\\\" class=\\\"red\\\">A Pets description must be 3 characters longer.</p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <p>Description: <input type=\\\"text\\\" name=\\\"newPet.description\\\" [(ngModel)]=\\\"newPet.description\\\"></p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"p\\\">Skills:</div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-1\\\"></div>\\n    <p>Skill 1: <input type=\\\"text\\\" name=\\\"newPet.skill1\\\" [(ngModel)]=\\\"newPet.skill1\\\"></p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-1\\\"></div>\\n    <p>Skill 2: <input type=\\\"text\\\" name=\\\"newPet.skill2\\\" [(ngModel)]=\\\"newPet.skill2\\\"></p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-1\\\"></div>\\n    <p>Skill 3: <input type=\\\"text\\\" name=\\\"newPet.skill3\\\" [(ngModel)]=\\\"newPet.skill3\\\"></p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\"><input type=\\\"submit\\\" value=\\\"Add Pet\\\"></div>\\n    <div class=\\\"col-2\\\"><button [routerLink]=\\\"['/']\\\">Cancel</button></div>    \\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-pet',\n  templateUrl: './new-pet.component.html',\n  styleUrls: ['./new-pet.component.css']\n})\nexport class NewPetComponent implements OnInit {\n  //name: \"\", type: \"\" , description: \"\", skill1: \"\", skill2:\"\", skill3:\"\"\n  newPet = {};\n  errorL;\n  constructor(private _httpService: HttpService,\n              private _route: ActivatedRoute,\n              private _router: Router) {}\n\n  ngOnInit() {\n  }\n  newPetForm(){\n    let observable = this._httpService.createPet(this.newPet);\n    observable.subscribe(data=>{\n      console.log(data);\n      if(data['status'] == 'errors'){\n        this.errorL = data['errors']\n        console.log(this.errorL);\n      }else{\n      this._router.navigate(['/'])\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <h4>These Pets are looking for a home!</h4>\\n</div>\\n<div class=\\\"row\\\">\\n  <button [routerLink]=\\\"['/new']\\\">Add a pet to the shelter</button>\\n</div>\\n<br>\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th>Name</th>\\n      <th>Type</th>\\n      <th>Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n      <tr *ngFor=\\\"let pet of pets\\\">\\n        <td>{{pet.name}}</td>\\n        <td>{{pet.type}}</td>\\n        <td>\\n          <button [routerLink]=\\\"['/details/'+pet._id]\\\">Details</button>\\n          <button [routerLink]=\\\"['/edit/'+pet._id]\\\">Edit</button>\\n        </td>\\n      </tr>\\n  </tbody>  \\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-pet-list',\n  templateUrl: './pet-list.component.html',\n  styleUrls: ['./pet-list.component.css']\n})\nexport class PetListComponent implements OnInit {\n\n  pets : any[];\n\n  constructor(private _httpService: HttpService) {\n    this.getPets();\n   }\n\n  ngOnInit() {\n  }\n  getPets(){\n    console.log(\"Get all the Pets\");\n    let observable = this._httpService.getPets();\n    observable.subscribe(data => {\n      this.pets = data['pets'];\n      console.log(this.pets)\n      this.pets.sort(function(a, b){\n        var typeA=a.type.toLowerCase(), typeB=b.type.toLowerCase()\n        if (typeA < typeB){ //sort string ascending\n         return -1 \n        }\n        if (typeA > typeB){\n          return 1\n        }\n        return 0 //default return value (no sorting)\n      });\n      console.log(this.pets)\n    });\n  }\n  // hashCode(string){\n  //   var hash = 0, i, chr;\n  //   if (string.length === 0) return hash;\n  //   for (i = 0; i < string.length; i++) {\n  //     chr   = string.charCodeAt(i);\n  //     hash  = ((hash << 5) - hash) + chr;\n  //     hash |= 0; // Convert to 32bit integer\n  //   }\n  //   return hash;\n  // };\n  \n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"pet\\\">\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\">\\n    <h3>Details about {{pet.name}}</h3>\\n  </div>\\n  <div class=\\\"col-6\\\">\\n    <button [routerLink]=\\\"['/']\\\">Home</button>\\n  </div>\\n</div>\\n\\n<br>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">\\n    <h5>Pet Type:</h5>\\n  </div>\\n  <div class=\\\"col-9\\\">\\n    <p>{{pet.type}}</p>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\">\\n      <h5>Description:</h5>\\n    </div>\\n    <div class=\\\"col-9\\\">\\n      <p>{{pet.description}}</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\">\\n      <h5>Skills:</h5>\\n    </div>\\n    <div class=\\\"col-9\\\">\\n      <p>{{pet.skill1}}</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-9\\\">\\n      <p>{{pet.skill2}}</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-9\\\">\\n      <p>{{pet.skill3}}</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\">\\n      <h5>Likes:</h5>\\n    </div>\\n    <div class=\\\"col-9\\\">\\n      <p>{{pet.likes}}</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-2\\\">\\n    <button [disabled]=\\\"isLiked\\\"(click)=\\\"likePet(pet)\\\">Like this pet</button>\\n  </div>\\n  <div class=\\\"col-2\\\">\\n    <button (click)=\\\"deletePet(pet._id)\\\">Adopt this pet!</button>\\n  </div>\\n</div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-petdetails',\n  templateUrl: './petdetails.component.html',\n  styleUrls: ['./petdetails.component.css']\n})\nexport class PetdetailsComponent implements OnInit {\n\n  pet;\n  id;\n  errorL;\n  isLiked = false;\n\n  constructor(private _httpService: HttpService,  \n              private _route: ActivatedRoute,\n              private _router: Router) {}\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.id = params['id']\n      this.getPetService(this.id);      \n    });    \n  }\n  getPetService(id){\n    let obversable = this._httpService.getPetBy(this.id);\n    obversable.subscribe(data=>{\n      this.pet = data;\n      console.log(this.pet);\n    })\n  }\n  deletePet(id){\n    let observable = this._httpService.deletePet(id);\n    observable.subscribe(data =>{\n      if(data['status'] == 'errors'){\n        this.errorL = data['errors']\n        console.log(this.errorL);\n      }else{\n      this._router.navigate(['/'])\n      }\n    });\n  }\n  likePet(likedPet){\n    likedPet.likes++;\n    this.isLiked = true;\n\n    let obversable= this._httpService.updatePet(likedPet);\n    obversable.subscribe(data=>{\n      if(data['status'] == 'errors'){\n        this.errorL = data['errors'];\n      }\n    });\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}